var documenterSearchIndex = {"docs":
[{"location":"api/axioms/#Axioms","page":"Axioms","title":"Axioms","text":"","category":"section"},{"location":"api/axioms/","page":"Axioms","title":"Axioms","text":"SpectralIndex\ncompute\nPlatformBand\nBand","category":"page"},{"location":"api/axioms/#SpectralIndices.SpectralIndex","page":"Axioms","title":"SpectralIndices.SpectralIndex","text":"SpectralIndex(index::Dict{String, Any})\n\nThis object allows interaction with specific Spectral Indices in the Awesome Spectral Indices list. Attributes of the Spectral Index can be accessed and the index itself can be computed.\n\nArguments\n\nindex::Dict{String, Any}: A dictionary with the following keys:\n\"short_name\": Short name of the spectral index.\n\"long_name\": Long name or description of the spectral index.\n\"bands\": List of bands or wavelengths used in the index calculation.\n\"application_domain\": Application domain or use case of the spectral index.\n\"reference\": Reference or source of the spectral index formula.\n\"formula\": Mathematical formula of the spectral index.\n\"date_of_addition\": Date when the spectral index was added (in \"yyyy-mm-dd\" format).\n\"contributor\": Contributor or source of the spectral index information.\n\"platforms\": Platforms or sensors for which the index is applicable.\n\nReturns\n\nA SpectralIndex object containing the specified index information.\n\nExamples\n\njulia> indices[\"NIRv\"]\n\nOr, accessing directly the provided Dict of spectral indices:\n\nNIRv\n\n\n\n\n\n","category":"type"},{"location":"api/axioms/#SpectralIndices.compute","page":"Axioms","title":"SpectralIndices.compute","text":"compute(si::SpectralIndex, params::Dict=Dict(); kwargs...) -> Any\n\nComputes a Spectral Index based on the provided SpectralIndex instance, parameters, and optional keyword arguments.\n\nParameters\n\nsi: An instance of SpectralIndex which includes the name and details of the spectral index to be computed.\nparams: (Optional) Dictionary of parameters used as inputs for the computation. If not provided, parameters can be passed using keyword arguments.\nkwargs: Additional parameters used as inputs for the computation, provided as keyword pairs. These are used if params is empty.\n\nReturns\n\nThe computed Spectral Index, the type of return value depends on the input parameters and the specific spectral index being computed.\n\nExamples\n\njulia> compute(NDVI; N=0.643, R=0.175)\n\njulia> compute(NDVI; N=fill(0.643, (5, 5)), R=fill(0.175, (5, 5)))\n\n\n\n\n\n","category":"function"},{"location":"api/axioms/#SpectralIndices.PlatformBand","page":"Axioms","title":"SpectralIndices.PlatformBand","text":"PlatformBand(platform_band::Dict{String, Any})\n\nThis struct provides information about a specific band for a specific sensor or platform.\n\nArguments\n\nplatform_band::Dict{String, Any}: A dictionary with the following keys:\n\"platform\": Name of the platform or sensor.\n\"band\": Band number or name for the specific platform.\n\"name\": Description or name of the band for the specific platform.\n\"wavelength\": Center wavelength of the band (in nm) for the specific platform.\n\"bandwidth\": Bandwidth of the band (in nm) for the specific platform.\n\nReturns\n\nA PlatformBand object containing the specified band information.\n\nExamples\n\nplatform_band_dict = Dict(\n    \"platform\" => \"Sentinel-2A\",\n    \"band\" => \"B2\",\n    \"name\" => \"Blue\",\n    \"wavelength\" => 492.4,\n    \"bandwidth\" => 66.0,\n)\n\nplatform_band = PlatformBand(platform_band_dict)\n\nOr, accessing directly the provided Dict of platforms:\n\njulia> bands[\"B\"].platforms[\"sentinel2a\"]\n\njulia> bands[\"B\"].platforms[\"sentinel2a\"].wavelength\n\n\n\n\n\n","category":"type"},{"location":"api/axioms/#SpectralIndices.Band","page":"Axioms","title":"SpectralIndices.Band","text":"Band(band::Dict{String, Any})\n\nConstructs a Band object to interact with specific bands in the list of required bands for Spectral Indices in the Awesome Spectral Indices list.\n\nArguments\n\nband::Dict{String, Any}: A dictionary containing band information with the following keys:\n\"short_name\": Short name of the band.\n\"long_name\": Description or name of the band.\n\"common_name\": Common name of the band according to the Electro-Optical Extension Specification for STAC.\n\"min_wavelength\": Minimum wavelength of the spectral range of the band (in nm).\n\"max_wavelength\": Maximum wavelength of the spectral range of the band (in nm).\n\"platforms\": A dictionary of platform information associated with this band.\n\nReturns\n\nA Band object representing the specified band.\n\nExamples\n\njulia> bands[\"B\"]\nband_dict = Dict{String, Any}(\n    \"short_name\" => \"B\",\n    \"long_name\" => \"Blue\",\n    \"common_name\" => \"Blue\",\n    \"min_wavelength\" => 450.0,\n    \"max_wavelength\" => 495.0,\n    \"platforms\" => Dict{String, Any}(\n        \"sentinel2a\" => PlatformBand(...),  # PlatformBand constructor details here\n        \"sentinel2b\" => PlatformBand(...),  # PlatformBand constructor details here\n        # Add other platforms as needed\n    )\n)\n\nband = Band(band_dict)\n````\nOr, using the provided bands\n\njulia-repl julia> bands[\"B\"].long_name ```\n\n\n\n\n\n","category":"type"},{"location":"api/compute/#Compute-Index","page":"Compute","title":"Compute Index","text":"","category":"section"},{"location":"api/compute/","page":"Compute","title":"Compute","text":"compute_index","category":"page"},{"location":"api/compute/#SpectralIndices.compute_index","page":"Compute","title":"SpectralIndices.compute_index","text":"compute_index(index::String, params::Dict=Dict(), online::Bool=false; kwargs...) -> Any\n\nComputes one or more Spectral Indices from a predefined list, based on the provided index name, parameters, and optional keyword arguments.\n\nParameters\n\nindex: Name of the spectral index or a list of index names to compute.\nparams: (Optional) Dictionary of parameters used as inputs for the computation. If not provided, parameters can be passed using keyword arguments.\nonline: (Optional) Flag indicating whether to retrieve the most recent list of indices online.\nkwargs: Additional parameters used as inputs for the computation, provided as keyword pairs.\n\nReturns\n\nComputed Spectral Indices, the type of return value depends on the input parameters.\n\nExamples\n\njulia> compute_index(\"NDVI\"; N=0.643, R=0.175)\n\njulia> compute_index(\"NDVI\"; N=fill(0.643, (5, 5)), R=fill(0.175, (5, 5)))\n\njulia> compute_index(\"NDVI\"; N=fill(0.643, 5), R=fill(0.175, 5))\n\njulia> compute_index([\"NDVI\", \"SAVI\"]; N=fill(0.643, 5), R=fill(0.175, 5), L=fill(0.5, 5))\n\njulia> compute_index([\"NDVI\", \"SAVI\"]; N=0.643, R=0.175, L=0.5)\n\njulia> compute_index(\n           [\"NDVI\", \"SAVI\"]; N=fill(0.643, (5, 5)), R=fill(0.175, (5, 5)), L=fill(0.5, (5, 5))\n       )\n\n\n\n\n\n","category":"function"},{"location":"#SpectralIndices.jl-Documentation","page":"SpectralIndices.jl","title":"SpectralIndices.jl Documentation","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"Welcome to the documentation for SpectralIndices.jl, a comprehensive Julia package for calculating a wide array of spectral indices used in remote sensing and environmental monitoring.","category":"page"},{"location":"#Overview","page":"SpectralIndices.jl","title":"Overview","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"SpectralIndices.jl simplifies the computation of spectral indices, offering support for both standard and custom indices. The package is designed for efficiency and ease of use, catering to both researchers and practitioners in the field of remote sensing.","category":"page"},{"location":"#Features","page":"SpectralIndices.jl","title":"Features","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"Supports a broad range of predefined spectral indices.\nCustom index creation capabilities.\nFlexible input options for various data types.\nEfficient computation for large datasets.","category":"page"},{"location":"#Getting-Started","page":"SpectralIndices.jl","title":"Getting Started","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"To get started with SpectralIndices.jl, follow these steps:","category":"page"},{"location":"#Installation","page":"SpectralIndices.jl","title":"Installation","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"To install SpectralIndices.jl, use the following Julia command:","category":"page"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"using Pkg\nPkg.add(\"SpectralIndices\")","category":"page"},{"location":"#Basic-usage","page":"SpectralIndices.jl","title":"Basic usage","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"Here's a simple example to compute the NDVI spectral index:","category":"page"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"using SpectralIndices\n\nNDVI_result = compute_index(\"NDVI\", N = 0.643, R = 0.175)","category":"page"},{"location":"#License","page":"SpectralIndices.jl","title":"License","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"SpectralIndices.jl is released under the MIT License.","category":"page"},{"location":"#Citation","page":"SpectralIndices.jl","title":"Citation","text":"","category":"section"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"If you use SpectralIndices.jl in your research, please cite it as follows:","category":"page"},{"location":"","page":"SpectralIndices.jl","title":"SpectralIndices.jl","text":"@article{montero2023standardized,\n  title={A standardized catalogue of spectral indices to advance the use of remote sensing in Earth system research},\n  author={Montero, David and Aybar, C{\\'e}sar and Mahecha, Miguel D and Martinuzzi, Francesco and S{\\\"o}chting, Maximilian and Wieneke, Sebastian},\n  journal={Scientific Data},\n  volume={10},\n  number={1},\n  pages={197},\n  year={2023},\n  publisher={Nature Publishing Group UK London}\n}","category":"page"}]
}
